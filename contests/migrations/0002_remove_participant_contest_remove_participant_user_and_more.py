# Generated by Django 5.2.6 on 2025-09-19 02:59

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('contests', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.RemoveField(
            model_name='participant',
            name='contest',
        ),
        migrations.RemoveField(
            model_name='participant',
            name='user',
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name="Titre de l'événement")),
                ('description', models.TextField(verbose_name='Description')),
                ('start_date', models.DateTimeField(verbose_name='Date de début')),
                ('end_date', models.DateTimeField(verbose_name='Date de fin')),
                ('created_by', models.ForeignKey(limit_choices_to={'role': 'modo'}, on_delete=django.db.models.deletion.CASCADE, related_name='created_events', to=settings.AUTH_USER_MODEL, verbose_name='Créé par')),
            ],
            options={
                'verbose_name': 'Événement',
                'verbose_name_plural': 'Événements',
            },
        ),
        migrations.CreateModel(
            name='Competitor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('registered_at', models.DateTimeField(auto_now_add=True, verbose_name="Date d'enregistrement")),
                ('registered_by', models.ForeignKey(limit_choices_to={'role': 'modo'}, on_delete=django.db.models.deletion.CASCADE, related_name='registered_competitors', to=settings.AUTH_USER_MODEL, verbose_name='Enregistré par')),
                ('user', models.OneToOneField(limit_choices_to={'role': 'participant'}, on_delete=django.db.models.deletion.CASCADE, related_name='competitor_profile', to=settings.AUTH_USER_MODEL, verbose_name='Concurrente')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='competitors', to='contests.event', verbose_name='Événement')),
            ],
            options={
                'verbose_name': 'Concurrente',
                'verbose_name_plural': 'Concurrentes',
                'unique_together': {('user', 'event')},
            },
        ),
        migrations.CreateModel(
            name='Trial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name="Titre de l'épreuve (ex. Cosplay)")),
                ('description', models.TextField(blank=True, verbose_name="Description de l'épreuve")),
                ('order', models.PositiveIntegerField(default=0, verbose_name="Ordre d'apparition")),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trials', to='contests.event', verbose_name='Événement')),
            ],
            options={
                'verbose_name': 'Trial (Épreuve)',
                'verbose_name_plural': 'Trials (Épreuves)',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Submission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('media', models.FileField(help_text='Téléchargez une photo (.jpg, .jpeg, .png) ou une vidéo (.mp4, .mov)', upload_to='submissions/', verbose_name='Média (photo ou vidéo)')),
                ('description', models.TextField(verbose_name='Description')),
                ('published_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de publication')),
                ('is_published', models.BooleanField(default=False, verbose_name='Publié ?')),
                ('competitor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submissions', to='contests.competitor', verbose_name='Concurrente')),
                ('published_by', models.ForeignKey(limit_choices_to={'role': 'modo'}, on_delete=django.db.models.deletion.CASCADE, related_name='published_submissions', to=settings.AUTH_USER_MODEL, verbose_name='Publié par')),
                ('trial', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submissions', to='contests.trial', verbose_name='Épreuve')),
            ],
            options={
                'verbose_name': 'Soumission',
                'verbose_name_plural': 'Soumissions',
                'unique_together': {('competitor', 'trial')},
            },
        ),
        migrations.CreateModel(
            name='Vote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('voted_at', models.DateTimeField(auto_now_add=True, verbose_name='Date du vote')),
                ('member', models.ForeignKey(limit_choices_to={'role__in': ['member', 'participant']}, on_delete=django.db.models.deletion.CASCADE, related_name='votes', to=settings.AUTH_USER_MODEL, verbose_name='Membre votant')),
                ('submission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='votes', to='contests.submission', verbose_name='Soumission votée')),
            ],
            options={
                'verbose_name': 'Vote',
                'verbose_name_plural': 'Votes',
                'unique_together': {('member', 'submission')},
            },
        ),
        migrations.DeleteModel(
            name='Contest',
        ),
        migrations.DeleteModel(
            name='Participant',
        ),
    ]
